Control Structures
if and else: testing a condition and acting on it
for: execute a loop a fixed number of times
break: break the execution of a loop
next: skip an iteration of a loop

if-else                                                            
if(<condition1>) {
      ## do something
} else if(<condition2>) {
      ## do something different
} else {
      ## do something different
}

## Generate a uniform random number
x <- runif(1, 0, 10)
if(x > 3) {
        y <- 10
} else {
        y <- 0
}

或者不要else命令
if(<condition1>) {
}
if(<condition2>) {
}

for loops
从1-10里面随机取数组成numbers
numbers <- rnorm(10)
for(i in 1:10) {
        print(numbers[i])
}
[1] -0.9567815
[1] 1.347491
[1] -0.03158058
[1] 0.5960358
[1] 1.133312
[1] -0.7085361
[1] 1.525453
[1] 1.114152
[1] -0.1214943
[1] -0.2898258
非随机
x <- c("a", "b", "c", "d")

for(i in 1:4) {
        ## Print out each element of 'x'
        print(x[i])  
}
[1] "a"
[1] "b"
[1] "c"
[1] "d"

## Generate a sequence based on length of 'x'
for(i in seq_along(x)) {   
        print(x[i])
}
[1] "a"
[1] "b"
[1] "c"
[1] "d"

多维多层 Nested Loops
x <- matrix(1:6, 2, 3)

for(i in seq_len(nrow(x))) {
        for(j in seq_len(ncol(x))) {
                print(x[i, j])
                
next()跳过上方指令
for(i in 1:100) {
        if(i <= 20) {
                ## Skip the first 20 iterations
                next                 
        }
        ## Do something here
}
break()执行完上方指令之后停止
for(i in 1:100) {
      print(i)

      if(i > 20) {
              ## Stop loop after 20 iterations
              break  
      }     
}
